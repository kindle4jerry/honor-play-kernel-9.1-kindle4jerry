/*
 * Copyright (C) BicDroid Inc. 2018-2019. All Rights Reserved.
 * Description: This file contains the error code and constant required for hwaa
 * Author: Xiang Yu, <yuxiang@bicdroid.com>
 *         Lorant Polya, <lpolya@bicdroid.com>
 * Create: 2018-03
 */
#ifndef _HWAA_COMMON_MACROSH
#define _HWAA_COMMON_MACROSH

// constant
// The max length of file encryption key that can be generated by TA
#define MAX_FILE_KEY_LENGTH 64
#define USER_KEY_LENGTH 64
// Length of one AES block
#define AES_BLOCK_LENGTH 16
// Length of hmac message that appends each encrypted message between TA
// and kernel
#define HMAC_LENGTH 32
#define KERNEL_QZONE_SECRET_LENGTH 32
#define PADDEDLEN(len) ((len) + (AES_BLOCK_LENGTH - ((len) % AES_BLOCK_LENGTH)))
#define SAFE_FREE(x) do { \
	if (x) { \
		kfree(x); \
		(x) = NULL; \
	} \
} while (0)

// error code
enum {
	ERR_MSG_SUCCESS = 0,
	ERR_MSG_OUT_OF_MEMORY = 1,
	// A pointer (that should not be null) is null
	ERR_MSG_NULL_PTR = 2,
	// Kernel submits a request with undefined request ID
	ERR_MSG_UNKNOWN_REQ_ID = 3,
	// Messages between kernel and TA are in wrong format
	ERR_MSG_PAYLOAD_FORMAT_ERROR = 4,
	// Wrong function (for kernel) is used to handle the reply from TA
	ERR_MSG_WRONG_REQ_ID = 5,
	// Error in reading from persistent storage
	ERR_MSG_BAD_FILE_READ = 6,
	// Error in writing to persistent storage
	ERR_MSG_BAD_FILE_WRIT = 7,
	// Length of file encryption key is invalid
	ERR_MSG_KDF_INVALID_KEY_LENGTH = 100,
	// Length of aes key is invalid, must be 16, 24 and 32 bytes
	ERR_MSG_AES_INVALID_KEY_LENGTH = 200,
	// AES encryption function fails, check AES encryption implementation
	ERR_MSG_AES_CRYPT_FUNC_FAIL = 201,
	// HMAC-SHA512 function fails, check HMAC-SHA512 implement
	ERR_MSG_HMAC_FUNC_FAIL = 203,
	ERR_MSG_APP_MAP_ENTRY_EXIST = 2001,
	ERR_MSG_APP_MAP_ENTRY_NOTEXIST  = 2002,
	ERR_MSG_GENERATE_FAIL = 2006,
};

// Error Codes specific to communication between tee and kernel
enum {
	// Length of given qzone secret is invalid
	ERR_MSG_KERNEL_QZONE_SECRET_WRONG_LENGTH = 1004,
	// Qzone code set request is issued more than once
	ERR_MSG_KERNEL_QZONE_CODE_DUP_REQUEST = 1005,
	// Qzone code being used is null
	ERR_MSG_KERNEL_QZONE_CODE_NULL = 1006,
	// Qzone secret being used is null
	ERR_MSG_KERNEL_QZONE_SECRET_NULL = 1007,
	// Qzone code used for code change does not match the current Qzone code
	ERR_MSG_KERNEL_QZONE_CODE_NOTMATCH = 1008,
	// Profile ID is invalid
	ERR_MSG_KERNEL_WRONG_PROFILE = 1010,
	// App id mismatches
	ERR_MSG_KERNEL_WRONG_APP_ID = 1011,
	// App is not running
	ERR_MSG_KERNEL_APP_NOT_RUN = 1012,
};
#endif
